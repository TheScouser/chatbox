/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard.index'
import { Route as WidgetDemoAgentIdImport } from './routes/widget-demo.$agentId'
import { Route as EmbedAgentIdImport } from './routes/embed.$agentId'
import { Route as DemoWebCrawlingImport } from './routes/demo.web-crawling'
import { Route as DemoVectorSearchImport } from './routes/demo.vector-search'
import { Route as DemoTextExtractionImport } from './routes/demo.text-extraction'
import { Route as DemoTableImport } from './routes/demo.table'
import { Route as DemoRichTextImport } from './routes/demo.rich-text'
import { Route as DemoKnowledgeImport } from './routes/demo.knowledge'
import { Route as DemoFileUploadImport } from './routes/demo.file-upload'
import { Route as DemoClerkImport } from './routes/demo.clerk'
import { Route as DemoChatImport } from './routes/demo.chat'
import { Route as DashboardUsageImport } from './routes/dashboard.usage'
import { Route as DashboardSettingsImport } from './routes/dashboard.settings'
import { Route as DashboardBillingImport } from './routes/dashboard.billing'
import { Route as DashboardAgentsImport } from './routes/dashboard.agents'
import { Route as ChatAgentIdImport } from './routes/chat.$agentId'
import { Route as ApiChatImport } from './routes/api.chat'
import { Route as DashboardSettingsIndexImport } from './routes/dashboard.settings.index'
import { Route as DashboardBillingIndexImport } from './routes/dashboard.billing.index'
import { Route as DashboardAgentsIndexImport } from './routes/dashboard.agents.index'
import { Route as DemoFormSimpleImport } from './routes/demo.form.simple'
import { Route as DemoFormAddressImport } from './routes/demo.form.address'
import { Route as DashboardSettingsPlansImport } from './routes/dashboard.settings.plans'
import { Route as DashboardSettingsMembersImport } from './routes/dashboard.settings.members'
import { Route as DashboardSettingsBillingImport } from './routes/dashboard.settings.billing'
import { Route as DashboardBillingPlansImport } from './routes/dashboard.billing.plans'
import { Route as DashboardAgentsNewImport } from './routes/dashboard.agents.new'
import { Route as DashboardAgentsAgentIdImport } from './routes/dashboard.agents.$agentId'
import { Route as DashboardAgentsAgentIdIndexImport } from './routes/dashboard.agents.$agentId.index'
import { Route as DashboardAgentsAgentIdSettingsImport } from './routes/dashboard.agents.$agentId.settings'
import { Route as DashboardAgentsAgentIdKnowledgeImport } from './routes/dashboard.agents.$agentId.knowledge'
import { Route as DashboardAgentsAgentIdDeployImport } from './routes/dashboard.agents.$agentId.deploy'
import { Route as DashboardAgentsAgentIdConversationsImport } from './routes/dashboard.agents.$agentId.conversations'
import { Route as DashboardAgentsAgentIdChatImport } from './routes/dashboard.agents.$agentId.chat'

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const WidgetDemoAgentIdRoute = WidgetDemoAgentIdImport.update({
  id: '/widget-demo/$agentId',
  path: '/widget-demo/$agentId',
  getParentRoute: () => rootRoute,
} as any)

const EmbedAgentIdRoute = EmbedAgentIdImport.update({
  id: '/embed/$agentId',
  path: '/embed/$agentId',
  getParentRoute: () => rootRoute,
} as any)

const DemoWebCrawlingRoute = DemoWebCrawlingImport.update({
  id: '/demo/web-crawling',
  path: '/demo/web-crawling',
  getParentRoute: () => rootRoute,
} as any)

const DemoVectorSearchRoute = DemoVectorSearchImport.update({
  id: '/demo/vector-search',
  path: '/demo/vector-search',
  getParentRoute: () => rootRoute,
} as any)

const DemoTextExtractionRoute = DemoTextExtractionImport.update({
  id: '/demo/text-extraction',
  path: '/demo/text-extraction',
  getParentRoute: () => rootRoute,
} as any)

const DemoTableRoute = DemoTableImport.update({
  id: '/demo/table',
  path: '/demo/table',
  getParentRoute: () => rootRoute,
} as any)

const DemoRichTextRoute = DemoRichTextImport.update({
  id: '/demo/rich-text',
  path: '/demo/rich-text',
  getParentRoute: () => rootRoute,
} as any)

const DemoKnowledgeRoute = DemoKnowledgeImport.update({
  id: '/demo/knowledge',
  path: '/demo/knowledge',
  getParentRoute: () => rootRoute,
} as any)

const DemoFileUploadRoute = DemoFileUploadImport.update({
  id: '/demo/file-upload',
  path: '/demo/file-upload',
  getParentRoute: () => rootRoute,
} as any)

const DemoClerkRoute = DemoClerkImport.update({
  id: '/demo/clerk',
  path: '/demo/clerk',
  getParentRoute: () => rootRoute,
} as any)

const DemoChatRoute = DemoChatImport.update({
  id: '/demo/chat',
  path: '/demo/chat',
  getParentRoute: () => rootRoute,
} as any)

const DashboardUsageRoute = DashboardUsageImport.update({
  id: '/usage',
  path: '/usage',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardSettingsRoute = DashboardSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardBillingRoute = DashboardBillingImport.update({
  id: '/billing',
  path: '/billing',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardAgentsRoute = DashboardAgentsImport.update({
  id: '/agents',
  path: '/agents',
  getParentRoute: () => DashboardRoute,
} as any)

const ChatAgentIdRoute = ChatAgentIdImport.update({
  id: '/chat/$agentId',
  path: '/chat/$agentId',
  getParentRoute: () => rootRoute,
} as any)

const ApiChatRoute = ApiChatImport.update({
  id: '/api/chat',
  path: '/api/chat',
  getParentRoute: () => rootRoute,
} as any)

const DashboardSettingsIndexRoute = DashboardSettingsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardSettingsRoute,
} as any)

const DashboardBillingIndexRoute = DashboardBillingIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardBillingRoute,
} as any)

const DashboardAgentsIndexRoute = DashboardAgentsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardAgentsRoute,
} as any)

const DemoFormSimpleRoute = DemoFormSimpleImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => rootRoute,
} as any)

const DemoFormAddressRoute = DemoFormAddressImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => rootRoute,
} as any)

const DashboardSettingsPlansRoute = DashboardSettingsPlansImport.update({
  id: '/plans',
  path: '/plans',
  getParentRoute: () => DashboardSettingsRoute,
} as any)

const DashboardSettingsMembersRoute = DashboardSettingsMembersImport.update({
  id: '/members',
  path: '/members',
  getParentRoute: () => DashboardSettingsRoute,
} as any)

const DashboardSettingsBillingRoute = DashboardSettingsBillingImport.update({
  id: '/billing',
  path: '/billing',
  getParentRoute: () => DashboardSettingsRoute,
} as any)

const DashboardBillingPlansRoute = DashboardBillingPlansImport.update({
  id: '/plans',
  path: '/plans',
  getParentRoute: () => DashboardBillingRoute,
} as any)

const DashboardAgentsNewRoute = DashboardAgentsNewImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => DashboardAgentsRoute,
} as any)

const DashboardAgentsAgentIdRoute = DashboardAgentsAgentIdImport.update({
  id: '/$agentId',
  path: '/$agentId',
  getParentRoute: () => DashboardAgentsRoute,
} as any)

const DashboardAgentsAgentIdIndexRoute =
  DashboardAgentsAgentIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DashboardAgentsAgentIdRoute,
  } as any)

const DashboardAgentsAgentIdSettingsRoute =
  DashboardAgentsAgentIdSettingsImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => DashboardAgentsAgentIdRoute,
  } as any)

const DashboardAgentsAgentIdKnowledgeRoute =
  DashboardAgentsAgentIdKnowledgeImport.update({
    id: '/knowledge',
    path: '/knowledge',
    getParentRoute: () => DashboardAgentsAgentIdRoute,
  } as any)

const DashboardAgentsAgentIdDeployRoute =
  DashboardAgentsAgentIdDeployImport.update({
    id: '/deploy',
    path: '/deploy',
    getParentRoute: () => DashboardAgentsAgentIdRoute,
  } as any)

const DashboardAgentsAgentIdConversationsRoute =
  DashboardAgentsAgentIdConversationsImport.update({
    id: '/conversations',
    path: '/conversations',
    getParentRoute: () => DashboardAgentsAgentIdRoute,
  } as any)

const DashboardAgentsAgentIdChatRoute = DashboardAgentsAgentIdChatImport.update(
  {
    id: '/chat',
    path: '/chat',
    getParentRoute: () => DashboardAgentsAgentIdRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/api/chat': {
      id: '/api/chat'
      path: '/api/chat'
      fullPath: '/api/chat'
      preLoaderRoute: typeof ApiChatImport
      parentRoute: typeof rootRoute
    }
    '/chat/$agentId': {
      id: '/chat/$agentId'
      path: '/chat/$agentId'
      fullPath: '/chat/$agentId'
      preLoaderRoute: typeof ChatAgentIdImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/agents': {
      id: '/dashboard/agents'
      path: '/agents'
      fullPath: '/dashboard/agents'
      preLoaderRoute: typeof DashboardAgentsImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/billing': {
      id: '/dashboard/billing'
      path: '/billing'
      fullPath: '/dashboard/billing'
      preLoaderRoute: typeof DashboardBillingImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/settings': {
      id: '/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/usage': {
      id: '/dashboard/usage'
      path: '/usage'
      fullPath: '/dashboard/usage'
      preLoaderRoute: typeof DashboardUsageImport
      parentRoute: typeof DashboardImport
    }
    '/demo/chat': {
      id: '/demo/chat'
      path: '/demo/chat'
      fullPath: '/demo/chat'
      preLoaderRoute: typeof DemoChatImport
      parentRoute: typeof rootRoute
    }
    '/demo/clerk': {
      id: '/demo/clerk'
      path: '/demo/clerk'
      fullPath: '/demo/clerk'
      preLoaderRoute: typeof DemoClerkImport
      parentRoute: typeof rootRoute
    }
    '/demo/file-upload': {
      id: '/demo/file-upload'
      path: '/demo/file-upload'
      fullPath: '/demo/file-upload'
      preLoaderRoute: typeof DemoFileUploadImport
      parentRoute: typeof rootRoute
    }
    '/demo/knowledge': {
      id: '/demo/knowledge'
      path: '/demo/knowledge'
      fullPath: '/demo/knowledge'
      preLoaderRoute: typeof DemoKnowledgeImport
      parentRoute: typeof rootRoute
    }
    '/demo/rich-text': {
      id: '/demo/rich-text'
      path: '/demo/rich-text'
      fullPath: '/demo/rich-text'
      preLoaderRoute: typeof DemoRichTextImport
      parentRoute: typeof rootRoute
    }
    '/demo/table': {
      id: '/demo/table'
      path: '/demo/table'
      fullPath: '/demo/table'
      preLoaderRoute: typeof DemoTableImport
      parentRoute: typeof rootRoute
    }
    '/demo/text-extraction': {
      id: '/demo/text-extraction'
      path: '/demo/text-extraction'
      fullPath: '/demo/text-extraction'
      preLoaderRoute: typeof DemoTextExtractionImport
      parentRoute: typeof rootRoute
    }
    '/demo/vector-search': {
      id: '/demo/vector-search'
      path: '/demo/vector-search'
      fullPath: '/demo/vector-search'
      preLoaderRoute: typeof DemoVectorSearchImport
      parentRoute: typeof rootRoute
    }
    '/demo/web-crawling': {
      id: '/demo/web-crawling'
      path: '/demo/web-crawling'
      fullPath: '/demo/web-crawling'
      preLoaderRoute: typeof DemoWebCrawlingImport
      parentRoute: typeof rootRoute
    }
    '/embed/$agentId': {
      id: '/embed/$agentId'
      path: '/embed/$agentId'
      fullPath: '/embed/$agentId'
      preLoaderRoute: typeof EmbedAgentIdImport
      parentRoute: typeof rootRoute
    }
    '/widget-demo/$agentId': {
      id: '/widget-demo/$agentId'
      path: '/widget-demo/$agentId'
      fullPath: '/widget-demo/$agentId'
      preLoaderRoute: typeof WidgetDemoAgentIdImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/agents/$agentId': {
      id: '/dashboard/agents/$agentId'
      path: '/$agentId'
      fullPath: '/dashboard/agents/$agentId'
      preLoaderRoute: typeof DashboardAgentsAgentIdImport
      parentRoute: typeof DashboardAgentsImport
    }
    '/dashboard/agents/new': {
      id: '/dashboard/agents/new'
      path: '/new'
      fullPath: '/dashboard/agents/new'
      preLoaderRoute: typeof DashboardAgentsNewImport
      parentRoute: typeof DashboardAgentsImport
    }
    '/dashboard/billing/plans': {
      id: '/dashboard/billing/plans'
      path: '/plans'
      fullPath: '/dashboard/billing/plans'
      preLoaderRoute: typeof DashboardBillingPlansImport
      parentRoute: typeof DashboardBillingImport
    }
    '/dashboard/settings/billing': {
      id: '/dashboard/settings/billing'
      path: '/billing'
      fullPath: '/dashboard/settings/billing'
      preLoaderRoute: typeof DashboardSettingsBillingImport
      parentRoute: typeof DashboardSettingsImport
    }
    '/dashboard/settings/members': {
      id: '/dashboard/settings/members'
      path: '/members'
      fullPath: '/dashboard/settings/members'
      preLoaderRoute: typeof DashboardSettingsMembersImport
      parentRoute: typeof DashboardSettingsImport
    }
    '/dashboard/settings/plans': {
      id: '/dashboard/settings/plans'
      path: '/plans'
      fullPath: '/dashboard/settings/plans'
      preLoaderRoute: typeof DashboardSettingsPlansImport
      parentRoute: typeof DashboardSettingsImport
    }
    '/demo/form/address': {
      id: '/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof DemoFormAddressImport
      parentRoute: typeof rootRoute
    }
    '/demo/form/simple': {
      id: '/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof DemoFormSimpleImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/agents/': {
      id: '/dashboard/agents/'
      path: '/'
      fullPath: '/dashboard/agents/'
      preLoaderRoute: typeof DashboardAgentsIndexImport
      parentRoute: typeof DashboardAgentsImport
    }
    '/dashboard/billing/': {
      id: '/dashboard/billing/'
      path: '/'
      fullPath: '/dashboard/billing/'
      preLoaderRoute: typeof DashboardBillingIndexImport
      parentRoute: typeof DashboardBillingImport
    }
    '/dashboard/settings/': {
      id: '/dashboard/settings/'
      path: '/'
      fullPath: '/dashboard/settings/'
      preLoaderRoute: typeof DashboardSettingsIndexImport
      parentRoute: typeof DashboardSettingsImport
    }
    '/dashboard/agents/$agentId/chat': {
      id: '/dashboard/agents/$agentId/chat'
      path: '/chat'
      fullPath: '/dashboard/agents/$agentId/chat'
      preLoaderRoute: typeof DashboardAgentsAgentIdChatImport
      parentRoute: typeof DashboardAgentsAgentIdImport
    }
    '/dashboard/agents/$agentId/conversations': {
      id: '/dashboard/agents/$agentId/conversations'
      path: '/conversations'
      fullPath: '/dashboard/agents/$agentId/conversations'
      preLoaderRoute: typeof DashboardAgentsAgentIdConversationsImport
      parentRoute: typeof DashboardAgentsAgentIdImport
    }
    '/dashboard/agents/$agentId/deploy': {
      id: '/dashboard/agents/$agentId/deploy'
      path: '/deploy'
      fullPath: '/dashboard/agents/$agentId/deploy'
      preLoaderRoute: typeof DashboardAgentsAgentIdDeployImport
      parentRoute: typeof DashboardAgentsAgentIdImport
    }
    '/dashboard/agents/$agentId/knowledge': {
      id: '/dashboard/agents/$agentId/knowledge'
      path: '/knowledge'
      fullPath: '/dashboard/agents/$agentId/knowledge'
      preLoaderRoute: typeof DashboardAgentsAgentIdKnowledgeImport
      parentRoute: typeof DashboardAgentsAgentIdImport
    }
    '/dashboard/agents/$agentId/settings': {
      id: '/dashboard/agents/$agentId/settings'
      path: '/settings'
      fullPath: '/dashboard/agents/$agentId/settings'
      preLoaderRoute: typeof DashboardAgentsAgentIdSettingsImport
      parentRoute: typeof DashboardAgentsAgentIdImport
    }
    '/dashboard/agents/$agentId/': {
      id: '/dashboard/agents/$agentId/'
      path: '/'
      fullPath: '/dashboard/agents/$agentId/'
      preLoaderRoute: typeof DashboardAgentsAgentIdIndexImport
      parentRoute: typeof DashboardAgentsAgentIdImport
    }
  }
}

// Create and export the route tree

interface DashboardAgentsAgentIdRouteChildren {
  DashboardAgentsAgentIdChatRoute: typeof DashboardAgentsAgentIdChatRoute
  DashboardAgentsAgentIdConversationsRoute: typeof DashboardAgentsAgentIdConversationsRoute
  DashboardAgentsAgentIdDeployRoute: typeof DashboardAgentsAgentIdDeployRoute
  DashboardAgentsAgentIdKnowledgeRoute: typeof DashboardAgentsAgentIdKnowledgeRoute
  DashboardAgentsAgentIdSettingsRoute: typeof DashboardAgentsAgentIdSettingsRoute
  DashboardAgentsAgentIdIndexRoute: typeof DashboardAgentsAgentIdIndexRoute
}

const DashboardAgentsAgentIdRouteChildren: DashboardAgentsAgentIdRouteChildren =
  {
    DashboardAgentsAgentIdChatRoute: DashboardAgentsAgentIdChatRoute,
    DashboardAgentsAgentIdConversationsRoute:
      DashboardAgentsAgentIdConversationsRoute,
    DashboardAgentsAgentIdDeployRoute: DashboardAgentsAgentIdDeployRoute,
    DashboardAgentsAgentIdKnowledgeRoute: DashboardAgentsAgentIdKnowledgeRoute,
    DashboardAgentsAgentIdSettingsRoute: DashboardAgentsAgentIdSettingsRoute,
    DashboardAgentsAgentIdIndexRoute: DashboardAgentsAgentIdIndexRoute,
  }

const DashboardAgentsAgentIdRouteWithChildren =
  DashboardAgentsAgentIdRoute._addFileChildren(
    DashboardAgentsAgentIdRouteChildren,
  )

interface DashboardAgentsRouteChildren {
  DashboardAgentsAgentIdRoute: typeof DashboardAgentsAgentIdRouteWithChildren
  DashboardAgentsNewRoute: typeof DashboardAgentsNewRoute
  DashboardAgentsIndexRoute: typeof DashboardAgentsIndexRoute
}

const DashboardAgentsRouteChildren: DashboardAgentsRouteChildren = {
  DashboardAgentsAgentIdRoute: DashboardAgentsAgentIdRouteWithChildren,
  DashboardAgentsNewRoute: DashboardAgentsNewRoute,
  DashboardAgentsIndexRoute: DashboardAgentsIndexRoute,
}

const DashboardAgentsRouteWithChildren = DashboardAgentsRoute._addFileChildren(
  DashboardAgentsRouteChildren,
)

interface DashboardBillingRouteChildren {
  DashboardBillingPlansRoute: typeof DashboardBillingPlansRoute
  DashboardBillingIndexRoute: typeof DashboardBillingIndexRoute
}

const DashboardBillingRouteChildren: DashboardBillingRouteChildren = {
  DashboardBillingPlansRoute: DashboardBillingPlansRoute,
  DashboardBillingIndexRoute: DashboardBillingIndexRoute,
}

const DashboardBillingRouteWithChildren =
  DashboardBillingRoute._addFileChildren(DashboardBillingRouteChildren)

interface DashboardSettingsRouteChildren {
  DashboardSettingsBillingRoute: typeof DashboardSettingsBillingRoute
  DashboardSettingsMembersRoute: typeof DashboardSettingsMembersRoute
  DashboardSettingsPlansRoute: typeof DashboardSettingsPlansRoute
  DashboardSettingsIndexRoute: typeof DashboardSettingsIndexRoute
}

const DashboardSettingsRouteChildren: DashboardSettingsRouteChildren = {
  DashboardSettingsBillingRoute: DashboardSettingsBillingRoute,
  DashboardSettingsMembersRoute: DashboardSettingsMembersRoute,
  DashboardSettingsPlansRoute: DashboardSettingsPlansRoute,
  DashboardSettingsIndexRoute: DashboardSettingsIndexRoute,
}

const DashboardSettingsRouteWithChildren =
  DashboardSettingsRoute._addFileChildren(DashboardSettingsRouteChildren)

interface DashboardRouteChildren {
  DashboardAgentsRoute: typeof DashboardAgentsRouteWithChildren
  DashboardBillingRoute: typeof DashboardBillingRouteWithChildren
  DashboardSettingsRoute: typeof DashboardSettingsRouteWithChildren
  DashboardUsageRoute: typeof DashboardUsageRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAgentsRoute: DashboardAgentsRouteWithChildren,
  DashboardBillingRoute: DashboardBillingRouteWithChildren,
  DashboardSettingsRoute: DashboardSettingsRouteWithChildren,
  DashboardUsageRoute: DashboardUsageRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/api/chat': typeof ApiChatRoute
  '/chat/$agentId': typeof ChatAgentIdRoute
  '/dashboard/agents': typeof DashboardAgentsRouteWithChildren
  '/dashboard/billing': typeof DashboardBillingRouteWithChildren
  '/dashboard/settings': typeof DashboardSettingsRouteWithChildren
  '/dashboard/usage': typeof DashboardUsageRoute
  '/demo/chat': typeof DemoChatRoute
  '/demo/clerk': typeof DemoClerkRoute
  '/demo/file-upload': typeof DemoFileUploadRoute
  '/demo/knowledge': typeof DemoKnowledgeRoute
  '/demo/rich-text': typeof DemoRichTextRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/text-extraction': typeof DemoTextExtractionRoute
  '/demo/vector-search': typeof DemoVectorSearchRoute
  '/demo/web-crawling': typeof DemoWebCrawlingRoute
  '/embed/$agentId': typeof EmbedAgentIdRoute
  '/widget-demo/$agentId': typeof WidgetDemoAgentIdRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/agents/$agentId': typeof DashboardAgentsAgentIdRouteWithChildren
  '/dashboard/agents/new': typeof DashboardAgentsNewRoute
  '/dashboard/billing/plans': typeof DashboardBillingPlansRoute
  '/dashboard/settings/billing': typeof DashboardSettingsBillingRoute
  '/dashboard/settings/members': typeof DashboardSettingsMembersRoute
  '/dashboard/settings/plans': typeof DashboardSettingsPlansRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/dashboard/agents/': typeof DashboardAgentsIndexRoute
  '/dashboard/billing/': typeof DashboardBillingIndexRoute
  '/dashboard/settings/': typeof DashboardSettingsIndexRoute
  '/dashboard/agents/$agentId/chat': typeof DashboardAgentsAgentIdChatRoute
  '/dashboard/agents/$agentId/conversations': typeof DashboardAgentsAgentIdConversationsRoute
  '/dashboard/agents/$agentId/deploy': typeof DashboardAgentsAgentIdDeployRoute
  '/dashboard/agents/$agentId/knowledge': typeof DashboardAgentsAgentIdKnowledgeRoute
  '/dashboard/agents/$agentId/settings': typeof DashboardAgentsAgentIdSettingsRoute
  '/dashboard/agents/$agentId/': typeof DashboardAgentsAgentIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/api/chat': typeof ApiChatRoute
  '/chat/$agentId': typeof ChatAgentIdRoute
  '/dashboard/usage': typeof DashboardUsageRoute
  '/demo/chat': typeof DemoChatRoute
  '/demo/clerk': typeof DemoClerkRoute
  '/demo/file-upload': typeof DemoFileUploadRoute
  '/demo/knowledge': typeof DemoKnowledgeRoute
  '/demo/rich-text': typeof DemoRichTextRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/text-extraction': typeof DemoTextExtractionRoute
  '/demo/vector-search': typeof DemoVectorSearchRoute
  '/demo/web-crawling': typeof DemoWebCrawlingRoute
  '/embed/$agentId': typeof EmbedAgentIdRoute
  '/widget-demo/$agentId': typeof WidgetDemoAgentIdRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/agents/new': typeof DashboardAgentsNewRoute
  '/dashboard/billing/plans': typeof DashboardBillingPlansRoute
  '/dashboard/settings/billing': typeof DashboardSettingsBillingRoute
  '/dashboard/settings/members': typeof DashboardSettingsMembersRoute
  '/dashboard/settings/plans': typeof DashboardSettingsPlansRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/dashboard/agents': typeof DashboardAgentsIndexRoute
  '/dashboard/billing': typeof DashboardBillingIndexRoute
  '/dashboard/settings': typeof DashboardSettingsIndexRoute
  '/dashboard/agents/$agentId/chat': typeof DashboardAgentsAgentIdChatRoute
  '/dashboard/agents/$agentId/conversations': typeof DashboardAgentsAgentIdConversationsRoute
  '/dashboard/agents/$agentId/deploy': typeof DashboardAgentsAgentIdDeployRoute
  '/dashboard/agents/$agentId/knowledge': typeof DashboardAgentsAgentIdKnowledgeRoute
  '/dashboard/agents/$agentId/settings': typeof DashboardAgentsAgentIdSettingsRoute
  '/dashboard/agents/$agentId': typeof DashboardAgentsAgentIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/api/chat': typeof ApiChatRoute
  '/chat/$agentId': typeof ChatAgentIdRoute
  '/dashboard/agents': typeof DashboardAgentsRouteWithChildren
  '/dashboard/billing': typeof DashboardBillingRouteWithChildren
  '/dashboard/settings': typeof DashboardSettingsRouteWithChildren
  '/dashboard/usage': typeof DashboardUsageRoute
  '/demo/chat': typeof DemoChatRoute
  '/demo/clerk': typeof DemoClerkRoute
  '/demo/file-upload': typeof DemoFileUploadRoute
  '/demo/knowledge': typeof DemoKnowledgeRoute
  '/demo/rich-text': typeof DemoRichTextRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/text-extraction': typeof DemoTextExtractionRoute
  '/demo/vector-search': typeof DemoVectorSearchRoute
  '/demo/web-crawling': typeof DemoWebCrawlingRoute
  '/embed/$agentId': typeof EmbedAgentIdRoute
  '/widget-demo/$agentId': typeof WidgetDemoAgentIdRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/agents/$agentId': typeof DashboardAgentsAgentIdRouteWithChildren
  '/dashboard/agents/new': typeof DashboardAgentsNewRoute
  '/dashboard/billing/plans': typeof DashboardBillingPlansRoute
  '/dashboard/settings/billing': typeof DashboardSettingsBillingRoute
  '/dashboard/settings/members': typeof DashboardSettingsMembersRoute
  '/dashboard/settings/plans': typeof DashboardSettingsPlansRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/dashboard/agents/': typeof DashboardAgentsIndexRoute
  '/dashboard/billing/': typeof DashboardBillingIndexRoute
  '/dashboard/settings/': typeof DashboardSettingsIndexRoute
  '/dashboard/agents/$agentId/chat': typeof DashboardAgentsAgentIdChatRoute
  '/dashboard/agents/$agentId/conversations': typeof DashboardAgentsAgentIdConversationsRoute
  '/dashboard/agents/$agentId/deploy': typeof DashboardAgentsAgentIdDeployRoute
  '/dashboard/agents/$agentId/knowledge': typeof DashboardAgentsAgentIdKnowledgeRoute
  '/dashboard/agents/$agentId/settings': typeof DashboardAgentsAgentIdSettingsRoute
  '/dashboard/agents/$agentId/': typeof DashboardAgentsAgentIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/api/chat'
    | '/chat/$agentId'
    | '/dashboard/agents'
    | '/dashboard/billing'
    | '/dashboard/settings'
    | '/dashboard/usage'
    | '/demo/chat'
    | '/demo/clerk'
    | '/demo/file-upload'
    | '/demo/knowledge'
    | '/demo/rich-text'
    | '/demo/table'
    | '/demo/text-extraction'
    | '/demo/vector-search'
    | '/demo/web-crawling'
    | '/embed/$agentId'
    | '/widget-demo/$agentId'
    | '/dashboard/'
    | '/dashboard/agents/$agentId'
    | '/dashboard/agents/new'
    | '/dashboard/billing/plans'
    | '/dashboard/settings/billing'
    | '/dashboard/settings/members'
    | '/dashboard/settings/plans'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/dashboard/agents/'
    | '/dashboard/billing/'
    | '/dashboard/settings/'
    | '/dashboard/agents/$agentId/chat'
    | '/dashboard/agents/$agentId/conversations'
    | '/dashboard/agents/$agentId/deploy'
    | '/dashboard/agents/$agentId/knowledge'
    | '/dashboard/agents/$agentId/settings'
    | '/dashboard/agents/$agentId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/api/chat'
    | '/chat/$agentId'
    | '/dashboard/usage'
    | '/demo/chat'
    | '/demo/clerk'
    | '/demo/file-upload'
    | '/demo/knowledge'
    | '/demo/rich-text'
    | '/demo/table'
    | '/demo/text-extraction'
    | '/demo/vector-search'
    | '/demo/web-crawling'
    | '/embed/$agentId'
    | '/widget-demo/$agentId'
    | '/dashboard'
    | '/dashboard/agents/new'
    | '/dashboard/billing/plans'
    | '/dashboard/settings/billing'
    | '/dashboard/settings/members'
    | '/dashboard/settings/plans'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/dashboard/agents'
    | '/dashboard/billing'
    | '/dashboard/settings'
    | '/dashboard/agents/$agentId/chat'
    | '/dashboard/agents/$agentId/conversations'
    | '/dashboard/agents/$agentId/deploy'
    | '/dashboard/agents/$agentId/knowledge'
    | '/dashboard/agents/$agentId/settings'
    | '/dashboard/agents/$agentId'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/api/chat'
    | '/chat/$agentId'
    | '/dashboard/agents'
    | '/dashboard/billing'
    | '/dashboard/settings'
    | '/dashboard/usage'
    | '/demo/chat'
    | '/demo/clerk'
    | '/demo/file-upload'
    | '/demo/knowledge'
    | '/demo/rich-text'
    | '/demo/table'
    | '/demo/text-extraction'
    | '/demo/vector-search'
    | '/demo/web-crawling'
    | '/embed/$agentId'
    | '/widget-demo/$agentId'
    | '/dashboard/'
    | '/dashboard/agents/$agentId'
    | '/dashboard/agents/new'
    | '/dashboard/billing/plans'
    | '/dashboard/settings/billing'
    | '/dashboard/settings/members'
    | '/dashboard/settings/plans'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/dashboard/agents/'
    | '/dashboard/billing/'
    | '/dashboard/settings/'
    | '/dashboard/agents/$agentId/chat'
    | '/dashboard/agents/$agentId/conversations'
    | '/dashboard/agents/$agentId/deploy'
    | '/dashboard/agents/$agentId/knowledge'
    | '/dashboard/agents/$agentId/settings'
    | '/dashboard/agents/$agentId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  ApiChatRoute: typeof ApiChatRoute
  ChatAgentIdRoute: typeof ChatAgentIdRoute
  DemoChatRoute: typeof DemoChatRoute
  DemoClerkRoute: typeof DemoClerkRoute
  DemoFileUploadRoute: typeof DemoFileUploadRoute
  DemoKnowledgeRoute: typeof DemoKnowledgeRoute
  DemoRichTextRoute: typeof DemoRichTextRoute
  DemoTableRoute: typeof DemoTableRoute
  DemoTextExtractionRoute: typeof DemoTextExtractionRoute
  DemoVectorSearchRoute: typeof DemoVectorSearchRoute
  DemoWebCrawlingRoute: typeof DemoWebCrawlingRoute
  EmbedAgentIdRoute: typeof EmbedAgentIdRoute
  WidgetDemoAgentIdRoute: typeof WidgetDemoAgentIdRoute
  DemoFormAddressRoute: typeof DemoFormAddressRoute
  DemoFormSimpleRoute: typeof DemoFormSimpleRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  ApiChatRoute: ApiChatRoute,
  ChatAgentIdRoute: ChatAgentIdRoute,
  DemoChatRoute: DemoChatRoute,
  DemoClerkRoute: DemoClerkRoute,
  DemoFileUploadRoute: DemoFileUploadRoute,
  DemoKnowledgeRoute: DemoKnowledgeRoute,
  DemoRichTextRoute: DemoRichTextRoute,
  DemoTableRoute: DemoTableRoute,
  DemoTextExtractionRoute: DemoTextExtractionRoute,
  DemoVectorSearchRoute: DemoVectorSearchRoute,
  DemoWebCrawlingRoute: DemoWebCrawlingRoute,
  EmbedAgentIdRoute: EmbedAgentIdRoute,
  WidgetDemoAgentIdRoute: WidgetDemoAgentIdRoute,
  DemoFormAddressRoute: DemoFormAddressRoute,
  DemoFormSimpleRoute: DemoFormSimpleRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/api/chat",
        "/chat/$agentId",
        "/demo/chat",
        "/demo/clerk",
        "/demo/file-upload",
        "/demo/knowledge",
        "/demo/rich-text",
        "/demo/table",
        "/demo/text-extraction",
        "/demo/vector-search",
        "/demo/web-crawling",
        "/embed/$agentId",
        "/widget-demo/$agentId",
        "/demo/form/address",
        "/demo/form/simple"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx",
      "children": [
        "/dashboard/agents",
        "/dashboard/billing",
        "/dashboard/settings",
        "/dashboard/usage",
        "/dashboard/"
      ]
    },
    "/api/chat": {
      "filePath": "api.chat.tsx"
    },
    "/chat/$agentId": {
      "filePath": "chat.$agentId.tsx"
    },
    "/dashboard/agents": {
      "filePath": "dashboard.agents.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/agents/$agentId",
        "/dashboard/agents/new",
        "/dashboard/agents/"
      ]
    },
    "/dashboard/billing": {
      "filePath": "dashboard.billing.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/billing/plans",
        "/dashboard/billing/"
      ]
    },
    "/dashboard/settings": {
      "filePath": "dashboard.settings.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/settings/billing",
        "/dashboard/settings/members",
        "/dashboard/settings/plans",
        "/dashboard/settings/"
      ]
    },
    "/dashboard/usage": {
      "filePath": "dashboard.usage.tsx",
      "parent": "/dashboard"
    },
    "/demo/chat": {
      "filePath": "demo.chat.tsx"
    },
    "/demo/clerk": {
      "filePath": "demo.clerk.tsx"
    },
    "/demo/file-upload": {
      "filePath": "demo.file-upload.tsx"
    },
    "/demo/knowledge": {
      "filePath": "demo.knowledge.tsx"
    },
    "/demo/rich-text": {
      "filePath": "demo.rich-text.tsx"
    },
    "/demo/table": {
      "filePath": "demo.table.tsx"
    },
    "/demo/text-extraction": {
      "filePath": "demo.text-extraction.tsx"
    },
    "/demo/vector-search": {
      "filePath": "demo.vector-search.tsx"
    },
    "/demo/web-crawling": {
      "filePath": "demo.web-crawling.tsx"
    },
    "/embed/$agentId": {
      "filePath": "embed.$agentId.tsx"
    },
    "/widget-demo/$agentId": {
      "filePath": "widget-demo.$agentId.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard.index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/agents/$agentId": {
      "filePath": "dashboard.agents.$agentId.tsx",
      "parent": "/dashboard/agents",
      "children": [
        "/dashboard/agents/$agentId/chat",
        "/dashboard/agents/$agentId/conversations",
        "/dashboard/agents/$agentId/deploy",
        "/dashboard/agents/$agentId/knowledge",
        "/dashboard/agents/$agentId/settings",
        "/dashboard/agents/$agentId/"
      ]
    },
    "/dashboard/agents/new": {
      "filePath": "dashboard.agents.new.tsx",
      "parent": "/dashboard/agents"
    },
    "/dashboard/billing/plans": {
      "filePath": "dashboard.billing.plans.tsx",
      "parent": "/dashboard/billing"
    },
    "/dashboard/settings/billing": {
      "filePath": "dashboard.settings.billing.tsx",
      "parent": "/dashboard/settings"
    },
    "/dashboard/settings/members": {
      "filePath": "dashboard.settings.members.tsx",
      "parent": "/dashboard/settings"
    },
    "/dashboard/settings/plans": {
      "filePath": "dashboard.settings.plans.tsx",
      "parent": "/dashboard/settings"
    },
    "/demo/form/address": {
      "filePath": "demo.form.address.tsx"
    },
    "/demo/form/simple": {
      "filePath": "demo.form.simple.tsx"
    },
    "/dashboard/agents/": {
      "filePath": "dashboard.agents.index.tsx",
      "parent": "/dashboard/agents"
    },
    "/dashboard/billing/": {
      "filePath": "dashboard.billing.index.tsx",
      "parent": "/dashboard/billing"
    },
    "/dashboard/settings/": {
      "filePath": "dashboard.settings.index.tsx",
      "parent": "/dashboard/settings"
    },
    "/dashboard/agents/$agentId/chat": {
      "filePath": "dashboard.agents.$agentId.chat.tsx",
      "parent": "/dashboard/agents/$agentId"
    },
    "/dashboard/agents/$agentId/conversations": {
      "filePath": "dashboard.agents.$agentId.conversations.tsx",
      "parent": "/dashboard/agents/$agentId"
    },
    "/dashboard/agents/$agentId/deploy": {
      "filePath": "dashboard.agents.$agentId.deploy.tsx",
      "parent": "/dashboard/agents/$agentId"
    },
    "/dashboard/agents/$agentId/knowledge": {
      "filePath": "dashboard.agents.$agentId.knowledge.tsx",
      "parent": "/dashboard/agents/$agentId"
    },
    "/dashboard/agents/$agentId/settings": {
      "filePath": "dashboard.agents.$agentId.settings.tsx",
      "parent": "/dashboard/agents/$agentId"
    },
    "/dashboard/agents/$agentId/": {
      "filePath": "dashboard.agents.$agentId.index.tsx",
      "parent": "/dashboard/agents/$agentId"
    }
  }
}
ROUTE_MANIFEST_END */
