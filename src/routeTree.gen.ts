/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard.index'
import { Route as DemoTableImport } from './routes/demo.table'
import { Route as DemoRichTextImport } from './routes/demo.rich-text'
import { Route as DemoKnowledgeImport } from './routes/demo.knowledge'
import { Route as DemoClerkImport } from './routes/demo.clerk'
import { Route as DashboardAgentsImport } from './routes/dashboard.agents'
import { Route as DashboardAgentsIndexImport } from './routes/dashboard.agents.index'
import { Route as DemoFormSimpleImport } from './routes/demo.form.simple'
import { Route as DemoFormAddressImport } from './routes/demo.form.address'
import { Route as DashboardAgentsNewImport } from './routes/dashboard.agents.new'
import { Route as DashboardAgentsAgentIdImport } from './routes/dashboard.agents.$agentId'

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const DemoTableRoute = DemoTableImport.update({
  id: '/demo/table',
  path: '/demo/table',
  getParentRoute: () => rootRoute,
} as any)

const DemoRichTextRoute = DemoRichTextImport.update({
  id: '/demo/rich-text',
  path: '/demo/rich-text',
  getParentRoute: () => rootRoute,
} as any)

const DemoKnowledgeRoute = DemoKnowledgeImport.update({
  id: '/demo/knowledge',
  path: '/demo/knowledge',
  getParentRoute: () => rootRoute,
} as any)

const DemoClerkRoute = DemoClerkImport.update({
  id: '/demo/clerk',
  path: '/demo/clerk',
  getParentRoute: () => rootRoute,
} as any)

const DashboardAgentsRoute = DashboardAgentsImport.update({
  id: '/agents',
  path: '/agents',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardAgentsIndexRoute = DashboardAgentsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardAgentsRoute,
} as any)

const DemoFormSimpleRoute = DemoFormSimpleImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => rootRoute,
} as any)

const DemoFormAddressRoute = DemoFormAddressImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => rootRoute,
} as any)

const DashboardAgentsNewRoute = DashboardAgentsNewImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => DashboardAgentsRoute,
} as any)

const DashboardAgentsAgentIdRoute = DashboardAgentsAgentIdImport.update({
  id: '/$agentId',
  path: '/$agentId',
  getParentRoute: () => DashboardAgentsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/agents': {
      id: '/dashboard/agents'
      path: '/agents'
      fullPath: '/dashboard/agents'
      preLoaderRoute: typeof DashboardAgentsImport
      parentRoute: typeof DashboardImport
    }
    '/demo/clerk': {
      id: '/demo/clerk'
      path: '/demo/clerk'
      fullPath: '/demo/clerk'
      preLoaderRoute: typeof DemoClerkImport
      parentRoute: typeof rootRoute
    }
    '/demo/knowledge': {
      id: '/demo/knowledge'
      path: '/demo/knowledge'
      fullPath: '/demo/knowledge'
      preLoaderRoute: typeof DemoKnowledgeImport
      parentRoute: typeof rootRoute
    }
    '/demo/rich-text': {
      id: '/demo/rich-text'
      path: '/demo/rich-text'
      fullPath: '/demo/rich-text'
      preLoaderRoute: typeof DemoRichTextImport
      parentRoute: typeof rootRoute
    }
    '/demo/table': {
      id: '/demo/table'
      path: '/demo/table'
      fullPath: '/demo/table'
      preLoaderRoute: typeof DemoTableImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/agents/$agentId': {
      id: '/dashboard/agents/$agentId'
      path: '/$agentId'
      fullPath: '/dashboard/agents/$agentId'
      preLoaderRoute: typeof DashboardAgentsAgentIdImport
      parentRoute: typeof DashboardAgentsImport
    }
    '/dashboard/agents/new': {
      id: '/dashboard/agents/new'
      path: '/new'
      fullPath: '/dashboard/agents/new'
      preLoaderRoute: typeof DashboardAgentsNewImport
      parentRoute: typeof DashboardAgentsImport
    }
    '/demo/form/address': {
      id: '/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof DemoFormAddressImport
      parentRoute: typeof rootRoute
    }
    '/demo/form/simple': {
      id: '/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof DemoFormSimpleImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/agents/': {
      id: '/dashboard/agents/'
      path: '/'
      fullPath: '/dashboard/agents/'
      preLoaderRoute: typeof DashboardAgentsIndexImport
      parentRoute: typeof DashboardAgentsImport
    }
  }
}

// Create and export the route tree

interface DashboardAgentsRouteChildren {
  DashboardAgentsAgentIdRoute: typeof DashboardAgentsAgentIdRoute
  DashboardAgentsNewRoute: typeof DashboardAgentsNewRoute
  DashboardAgentsIndexRoute: typeof DashboardAgentsIndexRoute
}

const DashboardAgentsRouteChildren: DashboardAgentsRouteChildren = {
  DashboardAgentsAgentIdRoute: DashboardAgentsAgentIdRoute,
  DashboardAgentsNewRoute: DashboardAgentsNewRoute,
  DashboardAgentsIndexRoute: DashboardAgentsIndexRoute,
}

const DashboardAgentsRouteWithChildren = DashboardAgentsRoute._addFileChildren(
  DashboardAgentsRouteChildren,
)

interface DashboardRouteChildren {
  DashboardAgentsRoute: typeof DashboardAgentsRouteWithChildren
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAgentsRoute: DashboardAgentsRouteWithChildren,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard/agents': typeof DashboardAgentsRouteWithChildren
  '/demo/clerk': typeof DemoClerkRoute
  '/demo/knowledge': typeof DemoKnowledgeRoute
  '/demo/rich-text': typeof DemoRichTextRoute
  '/demo/table': typeof DemoTableRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/agents/$agentId': typeof DashboardAgentsAgentIdRoute
  '/dashboard/agents/new': typeof DashboardAgentsNewRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/dashboard/agents/': typeof DashboardAgentsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/demo/clerk': typeof DemoClerkRoute
  '/demo/knowledge': typeof DemoKnowledgeRoute
  '/demo/rich-text': typeof DemoRichTextRoute
  '/demo/table': typeof DemoTableRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/agents/$agentId': typeof DashboardAgentsAgentIdRoute
  '/dashboard/agents/new': typeof DashboardAgentsNewRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/dashboard/agents': typeof DashboardAgentsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard/agents': typeof DashboardAgentsRouteWithChildren
  '/demo/clerk': typeof DemoClerkRoute
  '/demo/knowledge': typeof DemoKnowledgeRoute
  '/demo/rich-text': typeof DemoRichTextRoute
  '/demo/table': typeof DemoTableRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/agents/$agentId': typeof DashboardAgentsAgentIdRoute
  '/dashboard/agents/new': typeof DashboardAgentsNewRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/dashboard/agents/': typeof DashboardAgentsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/dashboard/agents'
    | '/demo/clerk'
    | '/demo/knowledge'
    | '/demo/rich-text'
    | '/demo/table'
    | '/dashboard/'
    | '/dashboard/agents/$agentId'
    | '/dashboard/agents/new'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/dashboard/agents/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/demo/clerk'
    | '/demo/knowledge'
    | '/demo/rich-text'
    | '/demo/table'
    | '/dashboard'
    | '/dashboard/agents/$agentId'
    | '/dashboard/agents/new'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/dashboard/agents'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/dashboard/agents'
    | '/demo/clerk'
    | '/demo/knowledge'
    | '/demo/rich-text'
    | '/demo/table'
    | '/dashboard/'
    | '/dashboard/agents/$agentId'
    | '/dashboard/agents/new'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/dashboard/agents/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  DemoClerkRoute: typeof DemoClerkRoute
  DemoKnowledgeRoute: typeof DemoKnowledgeRoute
  DemoRichTextRoute: typeof DemoRichTextRoute
  DemoTableRoute: typeof DemoTableRoute
  DemoFormAddressRoute: typeof DemoFormAddressRoute
  DemoFormSimpleRoute: typeof DemoFormSimpleRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  DemoClerkRoute: DemoClerkRoute,
  DemoKnowledgeRoute: DemoKnowledgeRoute,
  DemoRichTextRoute: DemoRichTextRoute,
  DemoTableRoute: DemoTableRoute,
  DemoFormAddressRoute: DemoFormAddressRoute,
  DemoFormSimpleRoute: DemoFormSimpleRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/demo/clerk",
        "/demo/knowledge",
        "/demo/rich-text",
        "/demo/table",
        "/demo/form/address",
        "/demo/form/simple"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx",
      "children": [
        "/dashboard/agents",
        "/dashboard/"
      ]
    },
    "/dashboard/agents": {
      "filePath": "dashboard.agents.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/agents/$agentId",
        "/dashboard/agents/new",
        "/dashboard/agents/"
      ]
    },
    "/demo/clerk": {
      "filePath": "demo.clerk.tsx"
    },
    "/demo/knowledge": {
      "filePath": "demo.knowledge.tsx"
    },
    "/demo/rich-text": {
      "filePath": "demo.rich-text.tsx"
    },
    "/demo/table": {
      "filePath": "demo.table.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard.index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/agents/$agentId": {
      "filePath": "dashboard.agents.$agentId.tsx",
      "parent": "/dashboard/agents"
    },
    "/dashboard/agents/new": {
      "filePath": "dashboard.agents.new.tsx",
      "parent": "/dashboard/agents"
    },
    "/demo/form/address": {
      "filePath": "demo.form.address.tsx"
    },
    "/demo/form/simple": {
      "filePath": "demo.form.simple.tsx"
    },
    "/dashboard/agents/": {
      "filePath": "dashboard.agents.index.tsx",
      "parent": "/dashboard/agents"
    }
  }
}
ROUTE_MANIFEST_END */
